---

- name: Install and configure Nginx
  hosts: web
  become: yes
  roles:
    - nginx

- name: Install Docker and Django application
  hosts: app
  become: yes
  roles:
    - docker
#  vars:
#    django_repo_url: 'https://github.com/mdn/django-locallibrary-tutorial'
#    django_app_dir: /opt/django_app
#    django_superuser_email: 'admin@example.com'
#    django_superuser_username: 'admin'
#    django_superuser_password: 'securepassword'
#    django_allowed_hosts: "['84.201.185.192', '89.169.157.231', 'localhost', '127.0.0.1']"
#  tasks:
#    - name: Install Python3 and pip
#      apt:
#        name:
#          - python3
#          - python3-venv
#          - python3-pip
#        state: present
#        update_cache: yes
#
#    - name: Clone Django repository
#      git:
#        repo: "{{ django_repo_url }}"
#        dest: "{{ django_app_dir }}"
#        update: yes
#        force: yes
#
#    - name: Create Python virtual environment
#      command: python3 -m venv venv
#      args:
#        chdir: "{{ django_app_dir }}"
#
#    - name: Install dependencies in virtual environment
#      pip:
#        requirements: "{{ django_app_dir }}/requirements.txt"
#        virtualenv: "{{ django_app_dir }}/venv"
#
#    - name: Update ALLOWED_HOSTS in settings.py
#      lineinfile:
#        path: "{{ django_app_dir }}/locallibrary/settings.py"
#        regexp: "^ALLOWED_HOSTS =.*"
#        line: "ALLOWED_HOSTS = {{ django_allowed_hosts }}"
#        state: present
#
#    - name: Run database migrations
#      command: "{{ django_app_dir }}/venv/bin/python manage.py migrate"
#      args:
#        chdir: "{{ django_app_dir }}"
#
#    - name: Collect static files
#      command: "{{ django_app_dir }}/venv/bin/python manage.py collectstatic --noinput"
#      args:
#        chdir: "{{ django_app_dir }}"
#
#    - name: Create Django superuser
#      django_manage:
#        command: createsuperuser
#        app_path: "{{ django_app_dir }}"
#        username: "{{ django_superuser_username }}"
#        email: "{{ django_superuser_email }}"
#        password: "{{ django_superuser_password }}"
#        no_input: true
#      ignore_errors: yes
#
#    - name: Run Django app via Gunicorn
#      command: "{{ django_app_dir }}/venv/bin/gunicorn --bind 0.0.0.0:8000 locallibrary.wsgi:application"
#      args:
#        chdir: "{{ django_app_dir }}"
#      async: 300
#      poll: 0
#
