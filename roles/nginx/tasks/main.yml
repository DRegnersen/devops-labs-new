#---
#- name: Install Nginx
#  apt:
#    name: nginx
#    state: present
#    update_cache: yes
#
#- name: Copy nginx configuration file
#  ansible.builtin.template:
#    src: nginx.conf.j2
#    dest: /etc/nginx/nginx.conf
#    owner: root
#    group: root
#    mode: '0644'
#    validate: 'nginx -t -c %s'
#    backup: yes
#  notify:
#    - Reload nginx
#
#- name: Copy default site configuration
#  ansible.builtin.template:
#    src: default.j2
#    dest: /etc/nginx/sites-available/default
#    owner: root
#    group: root
#    mode: '0644'
#    validate: 'nginx -t -c %s'
#    backup: yes
#  notify:
#    - Reload nginx
#
#- name: Enable the default site
#  command: "ln -s /etc/nginx/sites-available/default /etc/nginx/sites-enabled/"
#  args:
#    creates: /etc/nginx/sites-enabled/default
#
#- name: Ensure nginx is started and enabled
#  service:
#    name: nginx
#    state: started
#    enabled: yes

# roles/nginx_role/tasks/main.yml

---
- name: Install Nginx
  apt:
    name: nginx
    state: present
    update_cache: yes

- name: Configure Nginx
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf
  notify: restart nginx

- name: Deploy site configuration
  template:
    src: default_site.conf.j2
    dest: /etc/nginx/sites-available/default
  notify: restart nginx

- name: Enable site by creating symlink
  file:
    src: /etc/nginx/sites-available/default
    dest: /etc/nginx/sites-enabled/default
    state: link
  notify: restart nginx

- name: Check Nginx configuration for errors
  command: nginx -t
  register: nginx_config_test
  ignore_errors: yes

- name: Restart Nginx if configuration is valid
  service:
    name: nginx
    state: restarted
  when: nginx_config_test.rc == 0

- name: Ensure Nginx is running
  service:
    name: nginx
    state: started
    enabled: yes
